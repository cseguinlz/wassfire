"""Changed 'region' to 'country' since it based on country_code

Revision ID: 699f60ef998b
Revises: f3f44c45ef79
Create Date: 2024-02-12 13:56:58.959952

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "699f60ef998b"
down_revision: Union[str, None] = "f3f44c45ef79"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    def upgrade() -> None:
        # ### commands auto generated by Alembic - please adjust! ###
        op.add_column("products", sa.Column("country", sa.String(), nullable=True))
        section_enum = sa.Enum(
            "men", "women", "kids", "sports", "collections", name="section"
        )
        section_enum.create(op.get_bind(), checkfirst=True)

        # Explicitly cast the existing 'section' column to the new ENUM type
        op.execute(
            """
            ALTER TABLE products 
            ALTER COLUMN section TYPE section 
            USING section::text::section
        """
        )

        op.drop_column("products", "region")
        # ### end Alembic commands ###


def downgrade() -> None:
    def downgrade() -> None:
        # ### commands auto generated by Alembic - please adjust! ###
        op.add_column(
            "products",
            sa.Column("region", sa.String(), nullable=True),
        )

    # Assuming 'section' was previously a VARCHAR before the upgrade
    # and you want to revert it back without preserving ENUM 'section'
    op.execute(
        "ALTER TABLE products ALTER COLUMN section TYPE VARCHAR USING section::VARCHAR"
    )

    # Drop the 'country' column added during the upgrade
    op.drop_column("products", "country")

    # Drop the ENUM type 'section'. Be very cautious with this operation;
    # ensure it's not used elsewhere in your database.
    # This raw SQL command is PostgreSQL-specific.
    op.execute("DROP TYPE IF EXISTS section")
    # ### end Alembic commands ###
